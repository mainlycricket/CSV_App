"use strict";(self.webpackChunkcsv_app_docs=self.webpackChunkcsv_app_docs||[]).push([[223],{4563:(e,n,l)=>{l.r(n),l.d(n,{assets:()=>o,contentTitle:()=>r,default:()=>h,frontMatter:()=>d,metadata:()=>c,toc:()=>t});var i=l(4848),s=l(8453);const d={sidebar_position:5,sidebar_label:"Tables Config",title:"Tables Config"},r=void 0,c={id:"app/tables-config",title:"Tables Config",description:"- Configuration is set for each table individually in tables object of data/appConfig.json",source:"@site/docs/app/tables-config.md",sourceDirName:"app",slug:"/app/tables-config",permalink:"/CSV_App/docs/app/tables-config",draft:!1,unlisted:!1,editUrl:"https://github.com/mainlycricket/CSV_App_Docs/tree/main/docs/app/tables-config.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5,sidebar_label:"Tables Config",title:"Tables Config"},sidebar:"tutorialSidebar",previous:{title:"Auth",permalink:"/CSV_App/docs/app/auth"}},o={},t=[{value:"Read Configs",id:"read-configs",level:3},{value:"Pagination",id:"pagination",level:3},{value:"Auth Configs",id:"auth-configs",level:3},{value:"User &amp; Org Fields",id:"user--org-fields",level:3},{value:"Basic Auth &amp; Allowed Roles",id:"basic-auth--allowed-roles",level:3},{value:"Privileges &amp; Protected Fields",id:"privileges--protected-fields",level:3},{value:"Insert Auth",id:"insert-auth",level:3},{value:"Read Auth",id:"read-auth",level:3},{value:"Update Auth",id:"update-auth",level:3},{value:"Delete Auth",id:"delete-auth",level:3}];function a(e){const n={admonition:"admonition",code:"code",em:"em",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components},{Details:l}=n;return l||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Configuration is set for each table individually in ",(0,i.jsx)(n.code,{children:"tables"})," object of ",(0,i.jsx)(n.code,{children:"data/appConfig.json"})]}),"\n",(0,i.jsxs)(n.li,{children:["There are following config options for each table: ",(0,i.jsx)(n.code,{children:"readAllConfig"}),", ",(0,i.jsx)(n.code,{children:"readByPkConfig"}),", ",(0,i.jsx)(n.code,{children:"defaultPagination"}),", and auth configs: ",(0,i.jsx)(n.code,{children:"insertAuth"}),", ",(0,i.jsx)(n.code,{children:"readAllAuth"}),", ",(0,i.jsx)(n.code,{children:"readByPkAuth"}),", ",(0,i.jsx)(n.code,{children:"updateAuth"}),", ",(0,i.jsx)(n.code,{children:"deleteAuth"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["Explained with an example of the ",(0,i.jsx)(n.code,{children:"students"})," table configuration"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"read-configs",children:"Read Configs"}),"\n",(0,i.jsxs)(l,{children:[(0,i.jsx)("summary",{children:"Sample Read All Config"}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "readAllConfig": {\n    "columns": [\n      "Branch_Id",\n      "Student_Id",\n      "Student_Name",\n      "Course_Id",\n      "Student_Father",\n      "college_id"\n    ],\n    "foreignColumns": {\n      "Branch_Id": ["Branch_Id", "Branch_Name"],\n      "Course_Id": ["Course_Id", "Course_Name"],\n      "college_id": ["college_id", "college_name"]\n    }\n  }\n}\n'})}),(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["The ",(0,i.jsx)(n.code,{children:"columns"})," array specifies the fields to be selected"]}),"\n",(0,i.jsxs)(n.li,{children:["For the ",(0,i.jsx)(n.code,{children:"Branch_Id"})," foreign key, the ",(0,i.jsx)(n.code,{children:"Branch_Id"})," and ",(0,i.jsx)(n.code,{children:"Branch_Name"})," columns should be looked up"]}),"\n",(0,i.jsxs)(n.li,{children:["Similarly for the ",(0,i.jsx)(n.code,{children:"Course_Id"})," and ",(0,i.jsx)(n.code,{children:"college_id"})]}),"\n"]})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"readAllConfig"})," and ",(0,i.jsx)(n.code,{children:"readByPkConfig"})," are used for the GET all and GET by primary key requests respectively"]}),"\n",(0,i.jsxs)(n.li,{children:["The ",(0,i.jsx)(n.code,{children:"columns"})," array specifies the fields to be selected from the table"]}),"\n",(0,i.jsxs)(n.li,{children:["The ",(0,i.jsx)(n.code,{children:"foreignColumns"})," specifies the fields which should be looked up from the foreign table"]}),"\n",(0,i.jsxs)(n.li,{children:["If foreign table look-up is not required for a particular field, it need not be there in the ",(0,i.jsx)(n.code,{children:"foreignColumns"})]}),"\n",(0,i.jsx)(n.li,{children:"Hashed fields can't be included"}),"\n"]}),"\n",(0,i.jsx)(n.admonition,{title:"note",type:"danger",children:(0,i.jsxs)(n.p,{children:["If a field is present in ",(0,i.jsx)(n.code,{children:"foreignColumns"}),", it must be present in the ",(0,i.jsx)(n.code,{children:"columns"})," to mark it as selected in the first place"]})}),"\n",(0,i.jsx)(n.h3,{id:"pagination",children:"Pagination"}),"\n",(0,i.jsxs)(l,{children:[(0,i.jsx)("summary",{children:"Sample Pagination"}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "defaultPagination": 20\n}\n'})}),(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["If no ",(0,i.jsx)(n.code,{children:"__limit"})," query param is provided, at most 20 records will be returned by default"]}),"\n"]})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Used to set the default number of records to be returned in GET ",(0,i.jsx)(n.em,{children:"all"})," requests if the ",(0,i.jsx)(n.code,{children:"__limit"})," param is not specified"]}),"\n",(0,i.jsx)(n.li,{children:"It must be a non-zero positive number, hence pagination is not optional"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"auth-configs",children:"Auth Configs"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Auth Configs are configurable for each kind of request: GET, POST, PUT and DELETE"}),"\n",(0,i.jsxs)(n.li,{children:["Each auth config contains following fields: ",(0,i.jsx)(n.code,{children:"userField"}),", ",(0,i.jsx)(n.code,{children:"orgFields"}),", ",(0,i.jsx)(n.code,{children:"basicAuth"}),", ",(0,i.jsx)(n.code,{children:"allowedRoles"}),", ",(0,i.jsx)(n.code,{children:"privileges"})," and ",(0,i.jsx)(n.code,{children:"protectedFields"})]}),"\n",(0,i.jsx)(n.li,{children:"These fields are explained below."}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"user--org-fields",children:"User & Org Fields"}),"\n",(0,i.jsxs)(l,{children:[(0,i.jsx)("summary",{children:"Sample User & Org Fields"}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "userField": "added_by",\n  "orgFields": {\n    "college_id": "college_id",\n    "Course_Id": "course_id",\n    "Branch_Id": "branch_id"\n  },\n}\n'})}),(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Here, the value for the ",(0,i.jsx)(n.code,{children:"added_by"})," column will be taken from the ",(0,i.jsx)(n.code,{children:"username"})," in JWT token"]}),"\n",(0,i.jsxs)(n.li,{children:["For ",(0,i.jsx)(n.code,{children:"Course_Id"}),", the value will be taken from the ",(0,i.jsx)(n.code,{children:"course_id"})," in JWT token"]}),"\n",(0,i.jsxs)(n.li,{children:["Similary for ",(0,i.jsx)(n.code,{children:"college_id"})," and ",(0,i.jsx)(n.code,{children:"Branch_Id"})]}),"\n"]}),(0,i.jsx)(n.admonition,{type:"tip",children:(0,i.jsxs)(n.p,{children:["You may want to set the ",(0,i.jsx)(n.code,{children:"college_id"}),", ",(0,i.jsx)(n.code,{children:"Course_Id"}),", ",(0,i.jsx)(n.code,{children:"Branch_Id"})," as foreign keys to the respective ",(0,i.jsx)(n.code,{children:"colleges"}),", ",(0,i.jsx)(n.code,{children:"courses"}),", ",(0,i.jsx)(n.code,{children:"branches"})," table"]})})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["These are the fields whose value can be taken from the JWT ",(0,i.jsx)(n.code,{children:"access_token"})," cookie, in all kinds of request - POST, GET, PUT, DELETE"]}),"\n",(0,i.jsxs)(n.li,{children:["The key in the ",(0,i.jsx)(n.code,{children:"orgFields"})," is the column name in the table and the value is the corresponding column name in the ",(0,i.jsx)(n.em,{children:"auth"})," table"]}),"\n",(0,i.jsxs)(n.li,{children:["The value for the ",(0,i.jsx)(n.code,{children:"userField"})," column will be taken from ",(0,i.jsx)(n.code,{children:"username"})," field from JWT token"]}),"\n",(0,i.jsxs)(n.li,{children:["The value for the ",(0,i.jsx)(n.code,{children:"orgFields"})," column will be taken from the corresponding field from JWT token"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"basic-auth--allowed-roles",children:"Basic Auth & Allowed Roles"}),"\n",(0,i.jsxs)(l,{children:[(0,i.jsx)("summary",{children:"Sample Basic Auth & Allowed Roles"}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "basicAuth": true,\n  "allowedRoles": ["admin", "principal"]\n}\n'})})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["The ",(0,i.jsx)(n.code,{children:"basicAuth"})," flag, if set, ensures that only logged in users can access the particular resource"]}),"\n",(0,i.jsxs)(n.li,{children:["The ",(0,i.jsx)(n.code,{children:"allowedRoles"})," restricts the resource to users with the mentioned roles. It can be set only if the ",(0,i.jsx)(n.code,{children:"basicAuth"})," flag is enabled"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"privileges--protected-fields",children:"Privileges & Protected Fields"}),"\n",(0,i.jsxs)(l,{children:[(0,i.jsx)("summary",{children:"Sample Privileges & Protected Fields"}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "privileges": {\n    "Course_Id": ["principal"],\n    "Branch_Id": ["principal"]\n  },\n  "protectedFields": {\n    "verified": {\n      "true": ["principal"]\n    }\n  }\n}\n'})}),(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Here users with ",(0,i.jsx)(n.code,{children:"principal"})," roles should explicitly set the value for the ",(0,i.jsx)(n.code,{children:"Course_Id"})," and ",(0,i.jsx)(n.code,{children:"Branch_Id"})," (org) fields"]}),"\n",(0,i.jsxs)(n.li,{children:["The ",(0,i.jsx)(n.code,{children:"true"})," value for the ",(0,i.jsx)(n.code,{children:"verified"})," field can be set by users with the ",(0,i.jsx)(n.code,{children:"principal"})," role"]}),"\n"]})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["If you want users with some particular roles to explicit set the value of ",(0,i.jsx)(n.code,{children:"userField"})," or ",(0,i.jsx)(n.code,{children:"orgFields"}),", use ",(0,i.jsx)(n.code,{children:"privileges"})," to set the config"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["For enum-based or boolean columns, you can restrict the users who can set some particular values by using the ",(0,i.jsx)(n.code,{children:"protectedFields"})," object. Its structure is as follows:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "protectedFields": {\n    "field1": {\n      "value1": ["role1", "role2"],\n      "value2": ["role1"]\n    },\n    "field2": {\n      "value1": ["role1"],\n      "value2": ["role1", "role2"]\n    }\n  }\n}\n'})}),"\n",(0,i.jsx)(n.admonition,{type:"tip",children:(0,i.jsx)(n.p,{children:"The values should be mentioned in strings in the same format as the CSV files"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["It is possible to use ",(0,i.jsx)(n.code,{children:"privileges"})," and ",(0,i.jsx)(n.code,{children:"protectedFields"})," without enabling ",(0,i.jsx)(n.code,{children:"basicAuth"}),". Mention the normal roles as you would, and to address the non-logged-in users, use empty strings ",(0,i.jsx)(n.code,{children:'""'})," in the roles array"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "privileges": {\n    "orgField1": ["role1", ""]\n  },\n  "protectedFields": {\n    "field1": {\n      "value1": ["role1", ""]\n    }\n  }\n}\n'})}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"insert-auth",children:"Insert Auth"}),"\n",(0,i.jsxs)(l,{children:[(0,i.jsx)("summary",{children:"Sample Insert Auth"}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "insertAuth": {\n    "userField": "added_by",\n    "orgFields": ["college_id", "Course_Id", "Branch_Id"],\n    "basicAuth": true,\n    "allowedRoles": ["principal", "HoD"],\n    "privileges": {\n      "Course_Id": ["principal"],\n      "Branch_Id": ["principal"]\n    },\n    "protectedFields": {\n      "verified": {\n        "true": ["principal"]\n      }\n    }\n  }\n}\n'})}),(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Values for the ",(0,i.jsx)(n.code,{children:"added_by"})," and ",(0,i.jsx)(n.code,{children:"college_id"})," fields will be set according to the JWT token for both ",(0,i.jsx)(n.code,{children:"principal"})," & ",(0,i.jsx)(n.code,{children:"HoD"})," users"]}),"\n",(0,i.jsxs)(n.li,{children:["Values for ",(0,i.jsx)(n.code,{children:"Course_Id"})," and ",(0,i.jsx)(n.code,{children:"Branch_Id"})," are required to be set explicitly by users with the ",(0,i.jsx)(n.code,{children:"principal"})," role (and set according to token for ",(0,i.jsx)(n.code,{children:"HoD"})," users)"]}),"\n",(0,i.jsxs)(n.li,{children:["Also, only ",(0,i.jsx)(n.code,{children:"principal"})," users can set ",(0,i.jsx)(n.code,{children:"true"})," value for the ",(0,i.jsx)(n.code,{children:"verified"})," field"]}),"\n"]})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["The ",(0,i.jsx)(n.code,{children:"insertAuth"})," is used to control the behaviour of the ",(0,i.jsx)(n.code,{children:"POST"})," requests"]}),"\n",(0,i.jsxs)(n.li,{children:["This config, except ",(0,i.jsx)(n.code,{children:"basicAuth"})," and ",(0,i.jsx)(n.code,{children:"allowedRoles"}),", is also used in ",(0,i.jsx)(n.code,{children:"PUT"})," requests to handle the ",(0,i.jsx)(n.code,{children:"SET"})," clause."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"read-auth",children:"Read Auth"}),"\n",(0,i.jsxs)(l,{children:[(0,i.jsx)("summary",{children:"Sample Read All Auth"}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "readAllAuth": {\n    "orgFields": ["college_id", "Course_Id", "Branch_Id"],\n    "basicAuth": true,\n    "allowedRoles": ["principal", "HoD", "teacher"],\n    "privileges": {\n      "Course_Id": ["principal"],\n      "Branch_Id": ["principal"]\n    },\n    "protectedFields": {\n      "verified": {\n        "false": ["principal"]\n      }\n    }\n  }\n}\n'})}),(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Value for the ",(0,i.jsx)(n.code,{children:"college_id"})," field will be set according to the JWT token for all of ",(0,i.jsx)(n.code,{children:"principal"}),", ",(0,i.jsx)(n.code,{children:"HoD"})," & ",(0,i.jsx)(n.code,{children:"teacher"})," users"]}),"\n",(0,i.jsxs)(n.li,{children:["Values for ",(0,i.jsx)(n.code,{children:"Course_Id"})," and ",(0,i.jsx)(n.code,{children:"Branch_Id"})," can be set explicitly by users with the ",(0,i.jsx)(n.code,{children:"principal"})," role (and set according to token for ",(0,i.jsx)(n.code,{children:"HoD"})," & ",(0,i.jsx)(n.code,{children:"teacher"})," users)"]}),"\n",(0,i.jsxs)(n.li,{children:["Also, only ",(0,i.jsx)(n.code,{children:"principal"})," users can set ",(0,i.jsx)(n.code,{children:"false"})," value for the ",(0,i.jsx)(n.code,{children:"verified"})," field, meaning only they can access unverified students"]}),"\n"]})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["The ",(0,i.jsx)(n.code,{children:"readAllAuth"})," and ",(0,i.jsx)(n.code,{children:"readByPkAuth"})," are used to control the behaviour of the ",(0,i.jsx)(n.code,{children:"GET"})," all and ",(0,i.jsx)(n.code,{children:"GET"})," by primary key requests respectively"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"update-auth",children:"Update Auth"}),"\n",(0,i.jsxs)(l,{children:[(0,i.jsx)("summary",{children:"Sample Update Auth"}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "deleteAuth": {\n    "orgFields": ["college_id", "Course_Id", "Branch_Id"],\n    "basicAuth": true,\n    "allowedRoles": ["principal", "HoD"],\n    "privileges": {\n      "Course_Id": ["principal"],\n      "Branch_Id": ["principal"]\n    }\n  }\n}\n'})}),(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Value for the ",(0,i.jsx)(n.code,{children:"college_id"})," field will be set according to the JWT token for all of ",(0,i.jsx)(n.code,{children:"principal"})," & ",(0,i.jsx)(n.code,{children:"HoD"})," users"]}),"\n",(0,i.jsxs)(n.li,{children:["Values for ",(0,i.jsx)(n.code,{children:"Course_Id"})," and ",(0,i.jsx)(n.code,{children:"Branch_Id"})," can be set explicitly by users with the ",(0,i.jsx)(n.code,{children:"principal"})," role (and set according to token for ",(0,i.jsx)(n.code,{children:"HoD"})," users)"]}),"\n"]})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["The ",(0,i.jsx)(n.code,{children:"updateAuth"})," is used to control the ",(0,i.jsx)(n.code,{children:"WHERE"})," clause in ",(0,i.jsx)(n.code,{children:"PUT"})," requests"]}),"\n",(0,i.jsxs)(n.li,{children:["In the given example, users with the ",(0,i.jsx)(n.code,{children:"principal"})," role can update any student of his college, but HoDs can update students only of his department"]}),"\n",(0,i.jsxs)(n.li,{children:["Just to reiterate, the ",(0,i.jsx)(n.code,{children:"insertAuth"})," config applies in the ",(0,i.jsx)(n.code,{children:"SET"})," clause here. For instance, users with only ",(0,i.jsx)(n.code,{children:"principal"})," role can set the ",(0,i.jsx)(n.code,{children:"true"})," value for the ",(0,i.jsx)(n.code,{children:"verified"})," field as mentioned in the ",(0,i.jsx)(n.code,{children:"insertAuth"})]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"delete-auth",children:"Delete Auth"}),"\n",(0,i.jsxs)(l,{children:[(0,i.jsx)("summary",{children:"Sample Delete Auth"}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "deleteAuth": {\n    "orgFields": ["college_id", "Course_Id", "Branch_Id"],\n    "basicAuth": true,\n    "allowedRoles": ["principal", "HoD"],\n    "privileges": {\n      "Course_Id": ["principal"],\n      "Branch_Id": ["principal"]\n    }\n  }\n}\n'})}),(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Value for the ",(0,i.jsx)(n.code,{children:"college_id"})," field will be set according to the JWT token for all of ",(0,i.jsx)(n.code,{children:"principal"})," & ",(0,i.jsx)(n.code,{children:"HoD"})," users"]}),"\n",(0,i.jsxs)(n.li,{children:["Values for ",(0,i.jsx)(n.code,{children:"Course_Id"})," and ",(0,i.jsx)(n.code,{children:"Branch_Id"})," can be set explicitly by users with the ",(0,i.jsx)(n.code,{children:"principal"})," role (and set according to token for ",(0,i.jsx)(n.code,{children:"HoD"})," users)"]}),"\n"]})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["The ",(0,i.jsx)(n.code,{children:"deleteAuth"})," is used to control the ",(0,i.jsx)(n.code,{children:"WHERE"})," clause in ",(0,i.jsx)(n.code,{children:"DELETE"})," requests"]}),"\n",(0,i.jsxs)(n.li,{children:["In the given example, users with the ",(0,i.jsx)(n.code,{children:"principal"})," role can delete any student of his college, but HoDs can delete students only of his department"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},8453:(e,n,l)=>{l.d(n,{R:()=>r,x:()=>c});var i=l(6540);const s={},d=i.createContext(s);function r(e){const n=i.useContext(d);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),i.createElement(d.Provider,{value:n},e.children)}}}]);